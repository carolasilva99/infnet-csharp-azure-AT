@model MVC.Models.States.CreateStateDto

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>CreateStateDto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FormFile" class="control-label"></label>
                <input asp-for="FormFile" class="form-control" type="file"/>
                <span asp-validation-for="FormFile" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CountryId" class="control-label">Country</label>
                <select id="CountryId" name="CountryId" class="form-select">
                    @{
                        if (ViewBag?.Countries != null)
                        {
                            foreach (var country in ViewBag.Countries)
                            {
                                <option value="@country.Id">@country.Name</option>
                            }
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<p>
    @Html.ActionLink("Back To List", "Details", "Countries", new {id = Model.CountryId}, new { @class="btn btn-light"})
</p>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
